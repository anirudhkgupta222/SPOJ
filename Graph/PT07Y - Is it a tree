#include<bits/stdc++.h>
using namespace std;
 
void dfs(int src, vector<int> &vis, vector<int> al[]){
	
	vis[src] = 1;
	
	for(int i = 0; i < al[src].size(); i++){
		int child = al[src][i];
		
		if(vis[child] == 0){
			dfs(child, vis, al);
		}
	}
}
int main(){
	
	int n,m;
	
	cin >> n >> m;
	
	vector<int> al[n+1];
	int a,b;
 
	for(int i = 1; i <= m; i++){
		cin >> a >> b;
		al[a].push_back(b);
		al[b].push_back(a);
	}
	
	if(m != n - 1){
		cout << "NO" << endl;
	}
	else{
		
		vector<int> vis(n+1,0);
		int cc_count = 0;
		
		for(int i = 1; i <= n; i++){
			
			if(vis[i] == 0){
				cc_count++;
				dfs(i, vis, al);
			}
		}
		
		if(cc_count == 1){
			cout << "YES" << endl;
		}
		else{
			cout << "NO" << endl;
		}
	}
	return 0;
} 
